View(induce_combo)
combo <- induce_combo %>% select(Distal, Min_35, Min_10, Proximal, normalized_RNA_exp_UnInduced_12, normalized_RNA_exp_Induced_12) %>%
filter(Distal %in% c("lacO1", "lacO2", "lacO3", "lacOsym", "lacOscram"), Proximal %in% c("lacO1", "lacO2", "lacO3", "lacOsym". "lacOscram"))
combo <- induce_combo %>% select(Distal, Min_35, Min_10, Proximal, normalized_RNA_exp_UnInduced_12, normalized_RNA_exp_Induced_12) %>%
filter(Distal %in% c("lacO1", "lacO2", "lacO3", "lacOsym", "lacOscram"), Proximal %in% c("lacO1", "lacO2", "lacO3", "lacOsym", "lacOscram"))
View(combo)
multiple <- induce_multiple_fig3 %>% filter(Distal_left == 'lacOscram')
View(multiple)
combo <- induce_combo %>% select(variant, name, Distal, Min_35, Min_10, Proximal, normalized_RNA_exp_UnInduced_12, normalized_RNA_exp_Induced_12) %>%
filter(Distal %in% c("lacO1", "lacO2", "lacO3", "lacOsym", "lacOscram"), Proximal %in% c("lacO1", "lacO2", "lacO3", "lacOsym", "lacOscram"))
multiple <- induce_multiple_fig3 %>% filter(Distal_left == 'lacOscram')
test = left_join(combo, multiple, by = c("Distal" = "Distal_right", "Min_35", "Min_10", "Proximal"))
View(test)
test = inner_join(combo, multiple, by = c("Distal" = "Distal_right", "Min_35", "Min_10", "Proximal"))
View(test)
ggplot(test, aes(x = normalized_RNA_exp_UnInduced_12.x, y = normalized_RNA_exp_Induced_12.y)) + geom_point()
ggplot(test, aes(x = log2(normalized_RNA_exp_UnInduced_12.x), y = log2(normalized_RNA_exp_Induced_12.y))) + geom_point()
ggplot(test, aes(x = log2(normalized_RNA_exp_UnInduced_12.x), y = log2(normalized_RNA_exp_UnInduced_12.y))) + geom_point()
ggplot(test, aes(x = log2(normalized_RNA_exp_Induced_12.x), y = log2(normalized_RNA_exp_Induced_12.y))) + geom_point()
R2(test$normalized_RNA_exp_UnInduced_12.x, test$normalized_RNA_exp_UnInduced_12.y)
R2 <- function (x, y) cor(x, y) ^ 2
R2(test$normalized_RNA_exp_UnInduced_12.x, test$normalized_RNA_exp_UnInduced_12.y)
R2(test$normalized_RNA_exp_Induced_12.x, test$normalized_RNA_exp_Induced_12.y)
R2(test$normalized_RNA_exp_Induced_12.x, test$normalized_RNA_exp_Induced_12.y)
cor(test$normalized_RNA_exp_Induced_12.x, test$normalized_RNA_exp_Induced_12.y)
cor(test$normalized_RNA_exp_UnInduced_12.x, test$normalized_RNA_exp_UnInduced_12.y)
0.6656163^2
0.6245852^2
R2(log2(test$normalized_RNA_exp_Induced_12.x), log2(test$normalized_RNA_exp_Induced_12.y))
ggplot(test, aes(x = log2(normalized_RNA_exp_UnInduced_12.x), y = log2(normalized_RNA_exp_UnInduced_12.y))) + geom_point()
combo <- induce_combo %>% select(variant, name, Distal, Min_35, Min_10, Proximal, normalized_RNA_exp_UnInduced_12, normalized_RNA_exp_Induced_12) %>%
filter(Distal %in% c("lacO1", "lacO2", "lacO3", "lacOsym", "lacOscram"), Proximal %in% c("lacO1", "lacO2", "lacO3", "lacOsym", "lacOscram")) %>%
gather(Expression, Condition, 7:8)
combo <- induce_combo %>% select(variant, name, Distal, Min_35, Min_10, Proximal, normalized_RNA_exp_UnInduced_12, normalized_RNA_exp_Induced_12) %>%
filter(Distal %in% c("lacO1", "lacO2", "lacO3", "lacOsym", "lacOscram"), Proximal %in% c("lacO1", "lacO2", "lacO3", "lacOsym", "lacOscram")) %>%
gather(Condition, Expression, 7:8)
multiple <- induce_multiple_fig3 %>% filter(Distal_left == 'lacOscram') %>% gather(Condition, Expression, 8:9)
test = inner_join(combo, multiple, by = c("Distal" = "Distal_right", "Min_35", "Min_10", "Proximal", "Condition"))
R2(test$Expression.x, test$Expression.y)
R2(log2(test$Expression.x), log2(test$Expression.y))
R2(test$Expression.x, test$Expression.y)
ggplot(test, aes(x = Expression.x, y = Expression.y)) + geom_point(aes(color = Condition))
ggplot(test, aes(x = log2(Expression.x), y = log2(Expression.y))) + geom_point(aes(color = Condition))
ggplot(test, aes(x = log2(Expression.x), y = log2(Expression.y))) + geom_point(aes(color = Condition), alpha = 0.9)
ggplot(test, aes(x = log10(Expression.x), y = log10(Expression.y))) + geom_point(aes(color = Condition), alpha = 0.9)
R2(log10(test$Expression.x), log10(test$Expression.y))
ggplot(test, aes(x = log10(Expression.x), y = log10(Expression.y))) + geom_point(aes(color = Condition), alpha = 0.9)
ggplot(test, aes(x = log10(Expression.x), y = log10(Expression.y))) + geom_point(aes(color = Condition), alpha = 0.9) +
labs(x = 'log10(COMBO Expression)', y = 'log10(MULTIPLE Expression)')
r2 = R2(log10(test$Expression.x), log10(test$Expression.y))
ggplot(test, aes(x = log10(Expression.x), y = log10(Expression.y))) + geom_point(aes(color = Condition), alpha = 0.9) +
labs(x = 'log10(COMBO Expression)', y = 'log10(MULTIPLE Expression)') + geom_text(label = r2, x = -0.5, y = 1.5)
ggplot(test, aes(x = log10(Expression.x), y = log10(Expression.y))) + geom_point(aes(color = Condition), alpha = 0.9) +
labs(x = 'log10(COMBO Expression)', y = 'log10(MULTIPLE Expression)') + annotate(label = r2, x = -0.5, y = 1.5)
?annotate()
ggplot(test, aes(x = log10(Expression.x), y = log10(Expression.y))) + geom_point(aes(color = Condition), alpha = 0.9) +
labs(x = 'log10(COMBO Expression)', y = 'log10(MULTIPLE Expression)') + annotate("text", label = signif(r2, 3), x = -0.5, y = 1.5)
ggplot(test, aes(x = log10(Expression.x), y = log10(Expression.y))) + geom_point(aes(color = Condition), alpha = 0.9) +
labs(x = 'log10(COMBO Expression)', y = 'log10(MULTIPLE Expression)') + annotate("text", label = paste("R^2 ==", signif(r2, 3)), x = -0.5, y = 1.5)
ggplot(test, aes(x = log10(Expression.x), y = log10(Expression.y))) + geom_point(aes(color = Condition), alpha = 0.9) +
labs(x = 'log10(COMBO Expression)', y = 'log10(MULTIPLE Expression)') + annotate("text", label = paste("R2 =", signif(r2, 3)), x = -0.5, y = 1.5, size = 5)
r2 = R2(log10(test$Expression.x), log10(test$Expression.y))
x = (1,4,7,8,3,2,7,9,-5)
x = c(1,4,7,8,3,2,7,9,-5)
scale(x)
x = scale(x)
x
x
scale(x)
y = scale(x)
View(x)
View(y)
knitr::opts_knit$set(root.dir = '../processed_data')
library(ggplot2)
library(dplyr)
library(tidyr)
library(viridis)
require(cowplot)
theme_set(theme_cowplot())
require(forcats)
library(ggsignif)
induce_exp <- read.table("LacZ_variant_exp.txt", header = T)
options(digits=3)
induce_combo <- subset(induce_exp, grepl("COMBO", induce_exp$name)) %>% separate(col = 'name', into = c("Library", "Distal", "Min_35", "Min_10", "Proximal"), sep = "-", remove = F)
induce_distal <- subset(induce_exp, grepl("DISTAL", induce_exp$name)) %>% separate(col = 'name', into = c("Library", "Distal", "Offset", "Min_35", "Core", "Min_10"), sep = "-", remove = F)
induce_distal$Min_35 <- with(induce_distal, reorder(Min_35, ratio, median))
induce_distal$Min_10 <- with(induce_distal, reorder(Min_10, ratio, median))
induce_distal$Core <- with(induce_distal, reorder(Core, ratio, median))
induce_distal$Distal <- with(induce_distal, reorder(Distal, ratio, median))
induce_distal$Core <- gsub("_core", "", induce_distal$Core)
induce_steric <- subset(induce_exp, grepl("STERIC", induce_exp$name)) %>%
separate(col = 'name', into = c("Library", "Loop_Distance", "UP", "Core", "Extended_Min_10", "Min_10", "Proximal"), sep = "-", remove = F)
induce_steric$Min_10 <- with(induce_steric, reorder(Min_10, ratio, median))
induce_steric$Core <- with(induce_steric, reorder(Core, ratio, median))
induce_steric$Proximal <- with(induce_steric, reorder(Proximal, ratio, median))
induce_multiple <- subset(induce_exp, grepl("MULTIPLE", induce_exp$name)) %>% separate(col = 'name', into = c("Library", "Distal_left", "Distal_right", "Min_35", "Min_10", "Proximal"), sep = "-", remove = F)
# Figure S6: Pmultiple supplement - Induced/Uninduced comparison with Pcombo heatmap
temp <- induce_combo
colnames(temp)[colnames(temp) == "Distal"] <- "Distal_right"
combo_multiple_comp <- left_join(temp, induce_multiple, by = c("Distal_right", 'Min_10', "Min_35", "Proximal"))
combo_multiple_comp <- combo_multiple_comp[complete.cases(combo_multiple_comp), ] %>% filter(Min_10 == 'minus10cons' & Min_35 == 'minus35cons') # remove NA ones
combo_multiple_comp$Distal_right[combo_multiple_comp$Distal_right == "lacO2"] <- "lacO2-var"
combo_multiple_comp$Distal_left[combo_multiple_comp$Distal_left == "lacO2"] <- "lacO2-var"
combo_multiple_comp$Proximal[combo_multiple_comp$Proximal == "lacO2"] <- "lacO2-var"
induce_multiple$Distal_right[induce_multiple$Distal_right == "lacO2"] <- "lacO2-var"
induce_multiple$Distal_left[induce_multiple$Distal_left == "lacO2"] <- "lacO2-var"
induce_multiple$Proximal[induce_multiple$Proximal == "lacO2"] <- "lacO2-var"
# A ====================================
uninduced_O1 <- combo_multiple_comp %>%
filter(Proximal == 'lacO1') %>%
group_by(Distal_left, Distal_right) %>%
dplyr::mutate(mean_diff = mean(normalized_RNA_exp_UnInduced_12.y/normalized_RNA_exp_UnInduced_12.x)) %>%
ungroup() %>%
ggplot(., aes(x = Distal_right, y = Distal_left)) + geom_tile(aes(fill = mean_diff), alpha = 1, color = 'black', size = 0.4) +
scale_fill_viridis(name = 'Change in \nUninduced Expression \n(0 mM IPTG)', na.value = 'gray20', limits = c(0.12, 3.15)) +
scale_x_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + scale_y_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + labs(x = 'Distal Site', y = 'Distal+ Site', title = 'Proximal O1', size = 20) +
geom_text(aes(label=signif(mean_diff, 3)), size=5) +
theme(panel.background = element_rect(fill = "gray40"),
plot.title = element_text(size = 24),
axis.text.x = element_text(angle = 45, hjust = 1, size = 20),
axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 21),
axis.title.y.left = element_text(size = 21))
uninduced_Osym <- combo_multiple_comp %>%
filter(Proximal == 'lacOsym') %>%
group_by(Distal_left, Distal_right) %>%
dplyr::mutate(mean_diff = mean(normalized_RNA_exp_UnInduced_12.y/normalized_RNA_exp_UnInduced_12.x)) %>%
ungroup() %>%
ggplot(., aes(x = Distal_right, y = Distal_left)) + geom_tile(aes(fill = mean_diff), alpha = 1, color = 'black', size = 0.4) +
scale_fill_viridis(name = 'Change in \nUninduced Expression \n(0 mM IPTG)', na.value = 'gray20', limits = c(0.12, 3.15)) +
scale_x_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + scale_y_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + labs(x = 'Distal Site', y = 'Distal+ Site', title = 'Proximal Osym', size = 20) +
geom_text(aes(label=signif(mean_diff, 3)), size=5) +
theme(panel.background = element_rect(fill = "gray40"),
plot.title = element_text(size = 24),
axis.text.x = element_text(angle = 45, hjust = 1, size = 20),
axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 21),
axis.title.y.left = element_text(size = 21))
A <- plot_grid(uninduced_O1, uninduced_Osym)
# B ====================================
induced_O1 <- combo_multiple_comp %>%
filter(Proximal == 'lacO1') %>%
group_by(Distal_left, Distal_right) %>%
dplyr::mutate(mean_diff = mean(normalized_RNA_exp_Induced_12.y/normalized_RNA_exp_Induced_12.x)) %>%
ungroup() %>%
ggplot(., aes(x = Distal_right, y = Distal_left)) + geom_tile(aes(fill = mean_diff), alpha = 1, color = 'black', size = 0.4) +
scale_fill_viridis(name = 'Change in \nInduced Expression    \n(1 mM IPTG)', na.value = 'gray20', limits = c(0.14, 2.66)) +
scale_x_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + scale_y_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + labs(x = 'Distal Site', y = 'Distal+ Site', title = 'Proximal O1', size = 20) +
geom_text(aes(label=signif(mean_diff, 3)), size=5) +
theme(panel.background = element_rect(fill = "gray40"),
plot.title = element_text(size = 24),
axis.text.x = element_text(angle = 45, hjust = 1, size = 20),
axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 21),
axis.title.y.left = element_text(size = 21))
induced_Osym <- combo_multiple_comp %>%
filter(Proximal == 'lacOsym') %>%
group_by(Distal_left, Distal_right) %>%
dplyr::mutate(mean_diff = mean(normalized_RNA_exp_Induced_12.y/normalized_RNA_exp_Induced_12.x)) %>%
ungroup() %>%
ggplot(., aes(x = Distal_right, y = Distal_left)) + geom_tile(aes(fill = mean_diff), alpha = 1, color = 'black', size = 0.4) +
scale_fill_viridis(name = 'Change in \nInduced Expression    \n(1mM IPTG)', na.value = 'gray20', limits = c(0.14, 2.66)) +
scale_x_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + scale_y_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + labs(x = 'Distal Site', y = 'Distal+ Site', title = 'Proximal Osym', size = 20) +
geom_text(aes(label=signif(mean_diff, 3)), size=5) +
theme(panel.background = element_rect(fill = "gray40"),
plot.title = element_text(size = 24),
axis.text.x = element_text(angle = 45, hjust = 1, size = 20),
axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 21),
axis.title.y.left = element_text(size = 21))
B <- plot_grid(induced_O1, induced_Osym)
# C ====================================
FC1 <- induce_multiple %>%
filter(Min_10 == 'minus10cons' & Min_35 == 'minus35cons') %>%
filter(Proximal == 'lacOsym') %>%
ggplot(., aes(x = Distal_right, y = Distal_left)) + geom_tile(aes(fill = ratio), color = 'black', size = 0.25, alpha = 1) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 15), axis.text.y = element_text(size = 15)) +
scale_fill_viridis(option = 'viridis', limits = c(2.1, 16.7), name = 'Fold-change               ') +
scale_x_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + scale_y_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + labs(x = 'Distal Site', y = 'Distal+ Site', title = 'Proximal Osym', size = 20) +
geom_text(aes(label=signif(ratio, 3)), size=5) +
theme(panel.background = element_rect(fill = "gray40"),
plot.title = element_text(size = 24),
axis.text.x = element_text(angle = 45, hjust = 1, size = 20),
axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 21),
axis.title.y.left = element_text(size = 21))
FC2 <- induce_multiple %>%
filter(Min_10 == 'minus10cons' & Min_35 == 'minus35cons') %>%
filter(Proximal == 'lacO1') %>%
ggplot(., aes(x = Distal_right, y = Distal_left)) + geom_tile(aes(fill = ratio), color = 'black', size = 0.25, alpha = 1) + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 15), axis.text.y = element_text(size = 15)) +
scale_fill_viridis(option = 'viridis', limits = c(2.1, 16.7), name = 'Fold-change               ') +
scale_x_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + scale_y_discrete(limits = c("lacOscram", "lacO3", 'lacO2-var', 'lacO1', 'lacOsym')) + labs(x = 'Distal Site', y = 'Distal+ Site', title = 'Proximal O1', size = 20) +
geom_text(aes(label=signif(ratio, 3)), size=5) +
theme(panel.background = element_rect(fill = "gray40"),
plot.title = element_text(size = 24),
axis.text.x = element_text(angle = 45, hjust = 1, size = 20),
axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 21),
axis.title.y.left = element_text(size = 21))
C <- plot_grid(FC2, FC1)
plot_grid(A,B, ncol = 1, labels = 'AUTO', label_size = 20, rel_widths = c(1, 1))
ggsave('../FigureSX/FigureS6.pdf', width = 15.5, height = 10)
# save data table as input
write.table(combo_multiple_comp, '../source_data/FigureS6.txt', quote = F, row.names = F, sep = '\t')
# Figure S7: Pspacer Supp
induce_distal <- induce_distal %>%
mutate(realOffset = as.numeric(Offset) + 26)
induce_distal$Core[induce_distal$Core == "lacO2"] <- "lacO2-var"
induce_distal[,'Distal'] <- sapply(induce_distal[,'Distal'],as.character)
induce_distal$Distal[induce_distal$Distal == "lacO2"] <- "lacO2-var"
induce_distal$Distal <- factor(induce_distal$Distal, levels = c('lacOscram','lacO3','lacO2-var','lacO1','lacOsym'))
A <- induce_distal %>% filter(Min_10 == 'minus10cons', Min_35 == 'minus35cons') %>%
ggplot(aes(y = log2(ratio), fill = Distal, x = Core)) +
geom_bar(position = "dodge", stat = 'identity', color = 'black') +
scale_x_discrete(limits = c('lacOscram', 'lacO3', 'lacO2-var', 'lacO1', 'lacOsym')) +
scale_fill_viridis(discrete = TRUE, name = 'Distal site', alpha = 0.9) +
labs(x = 'Core site', y = expression('log'[2]~'(Fold-change)')) + geom_hline(yintercept=0, color = 'black', size = 0.5) + geom_hline(yintercept=2, linetype = 'dashed', color = 'red', size = 0.5) + geom_hline(yintercept=4, linetype = 'dashed', color = 'red', size = 0.5) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 18),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 20),
legend.title = element_text(size = 22),
legend.text = element_text(size = 20),
axis.title.x.bottom = element_text(size = 24),
axis.title.y.left = element_text(size = 24)) +
facet_wrap(~realOffset, scales = 'fixed')
induce_distal$Min_10  <- with(induce_distal, reorder(Min_10, normalized_RNA_exp_Induced_12, median))
induce_distal$Min_35 <- with(induce_distal, reorder(Min_35, normalized_RNA_exp_Induced_12, median))
induce_distal$Core <- with(induce_distal, reorder(Core, -normalized_RNA_exp_UnInduced_12, median))
B <- induce_distal %>%
ggplot(aes(x = as.factor(realOffset), y = log2(ratio))) + geom_boxplot(outlier.shape = NA) + geom_jitter(aes(color = Core), alpha = 0.7) +
scale_color_viridis(discrete = TRUE) +
labs(x = 'Operator spacing', y = 'log2(Fold-change)') +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 20),
title = element_text(size = 24),
legend.text = element_text(size = 16))
C <- induce_distal %>%
filter(Offset == 22) %>%
group_by(Min_10,Min_35) %>%
mutate(avgInd = mean(normalized_RNA_exp_Induced_12)) %>%
select(Min_10, Min_35, avgInd) %>%
distinct() %>%
ggplot(aes(x = Min_10, y = Min_35)) +
geom_tile(aes(fill = log2(avgInd)), alpha = 1, size = 0.5, color = 'gray20') +
scale_fill_viridis(name = 'Mean Induced Expression \n(1 mM IPTG)') +
geom_text(aes(label=signif(avgInd, 3)), size=10) +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 20),
title = element_text(size = 24),
legend.text = element_text(size = 16)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 20), axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 24),
axis.title.y.left = element_text(size = 24)) +
labs(x = '-10 Element', y = '-35 Element')
plot_grid(A,B,C, ncol = 1, labels = 'AUTO', label_size = 20)
ggsave('../FigureSX/FigureS7.pdf', width = 13, height = 22)
# save data table as input
write.table(induce_distal, '../source_data/FigureS7.txt', quote = F, row.names = F, sep = '\t')
# Figure S8: Psteric supplement - Although weak, if any, transcription was detected from promoters with only a -10, we found that relatively strong promoters could be created by the addition of an UP-element and extended -10
up_326x_ext_10 <- filter(induce_steric, Loop_Distance == 55, UP == 'up_326x', Extended_Min_10 == 'ext_min10') %>% mutate(category = 'up_326x_ext_10')
up_326x_ext_UV5 <- filter(induce_steric, Loop_Distance == 55, UP == 'up_326x', Extended_Min_10 == 'ext_UV5') %>% mutate(category = 'up_326x_ext_UV5')
no_up_ext_10 <- filter(induce_steric, Loop_Distance == 55, UP == 'no_up', Extended_Min_10 == 'ext_min10') %>% mutate(category = 'no_up_ext_10')
no_up_ext_UV5 <- filter(induce_steric, Loop_Distance == 55, UP == 'no_up', Extended_Min_10 == 'ext_UV5') %>% mutate(category = 'no_up_ext_UV5')
temp1 <- rbind(up_326x_ext_10, up_326x_ext_UV5)
temp2 <- rbind(temp1, no_up_ext_10)
steric_box <- rbind(temp2, no_up_ext_UV5)
rm(temp1, temp2, up_326x_ext_10, up_326x_ext_UV5, no_up_ext_10, no_up_ext_UV5)
A <- steric_box %>%
filter(Proximal == 'lacOscram', Core == 'lacOscram') %>%
ggplot(., aes(fill = Min_10, y = normalized_RNA_exp_UnInduced_12, x = category)) +
geom_bar(position = 'dodge', stat = 'identity', alpha = 0.9, color = 'black') + scale_x_discrete(limits = c('no_up_ext_UV5', 'up_326x_ext_UV5', 'no_up_ext_10', 'up_326x_ext_10')) +
scale_fill_viridis(discrete = TRUE, name = '-10 Element') +
labs(y = 'Uninduced expression', x = 'Regulatory element combination') + theme(axis.text.x = element_text(angle = 45, hjust = 1, size =10)) +
theme(axis.text = element_text(size = 20),
axis.text.x = element_text(size = 16),
axis.title = element_text(size = 20),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = c(0.05, 0.75))
# Figure S8: Psteric Supp
B <- induce_steric %>%
mutate(ProximalPos = ifelse(Loop_Distance == '55', '+30', '+11')) %>%
ggplot(aes(x=ProximalPos, y=ratio)) +
geom_violin(aes(fill = ProximalPos), trim = FALSE, alpha = 0.9) +
#geom_jitter(aes(fill = ProximalPos), pch=21, color='black',alpha=1, size=3, width = 0.3) +
#geom_boxplot(outlier.shape=NA, fill = NA) +
scale_fill_manual(values=c("darkslateblue", "#de6fa1")) +
labs(y = 'Fold-change', x = 'Proximal site position') +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 22),
axis.title.y.left = element_text(size = 22),
legend.position = "none")
C <- induce_steric %>%
filter(UP == 'up_326x' | UP == 'up_136x') %>%
filter(Loop_Distance == 55) %>%
filter(Extended_Min_10 == 'ext_min10') %>%
filter(Min_10 == 'minus10cons') %>%
ggplot(aes(x=Core, y=normalized_RNA_exp_Induced_12)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = Core), alpha = 0.75, size = 3) +
scale_x_discrete(limits = c('lacOscram', 'lacO2', 'lacO3', 'lacO1', 'lacOsym')) +
scale_color_viridis(discrete = TRUE) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 15), axis.text.y = element_text(size = 15)) +
labs(x = 'Core Operator Site', y = 'Induced Expression') +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 20),
axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 22),
axis.title.y.left = element_text(size = 22),
legend.position = 'none')
plot_grid(A,B,C,labels='AUTO', ncol = 3, label_size = 20)
ggsave('../FigureSX/FigureS8.pdf', width = 18, height = 7)
# save data table as input
write.table(steric_box, '../source_data/FigureS8_A.txt', quote = F, row.names = F, sep = '\t')
write.table(induce_steric, '../source_data/FigureS8_BC.txt', quote = F, row.names = F, sep = '\t')
# Figure S9: Correlations between RNAseq and Flow
comp <- read.table('../raw_data/newFlowComparison.txt', header = TRUE)
options(digits=3)
pearsonFC <- cor(comp$RNAseq_FC, comp$Flow_FC, method = "pearson")
pearsonI <- cor(comp$RNAseq_Induced, comp$Flow_Induced, method = "pearson")
pearsonUI <- cor(comp$RNAseq_Uninduced, comp$Flow_Uninduced, method = "pearson")
spearFC <- cor(comp$RNAseq_FC, comp$Flow_FC, method = c("spearman"))
spearI <- cor(comp$RNAseq_Induced, comp$Flow_Induced, method = c("spearman"))
spearUI <- cor(comp$RNAseq_Uninduced, comp$Flow_Uninduced, method = c("spearman"))
# FC
cor.test(comp$RNAseq_FC, comp$Flow_FC, method = "pearson")$estimate # 0.885
cor.test(comp$RNAseq_FC, comp$Flow_FC, method = "pearson")$p.value # 0.00153
# Induced
cor.test(comp$RNAseq_Induced, comp$Flow_Induced, method = "pearson")$estimate # 0.701
cor.test(comp$RNAseq_Induced, comp$Flow_Induced, method = "pearson")$p.value # 0.0352
# Uninduced
cor.test(comp$RNAseq_Uninduced, comp$Flow_Uninduced, method = "pearson")$estimate # 0.981
cor.test(comp$RNAseq_Uninduced, comp$Flow_Uninduced, method = "pearson")$p.value # 3.34e-06
# FC
cor.test(comp$RNAseq_FC, comp$Flow_FC, method = "spearman")$estimate # 0.533
cor.test(comp$RNAseq_FC, comp$Flow_FC, method = "spearman")$p.value # 0.148
# Induced
cor.test(comp$RNAseq_Induced, comp$Flow_Induced, method = "spearman")$estimate # 0.6
cor.test(comp$RNAseq_Induced, comp$Flow_Induced, method = "spearman")$p.value # 0.0968
# Uninduced
cor.test(comp$RNAseq_Uninduced, comp$Flow_Uninduced, method = "spearman")$estimate # 0.65
cor.test(comp$RNAseq_Uninduced, comp$Flow_Uninduced, method = "spearman")$p.value # 0.0666
library_comp <- comp %>%
mutate(Library = ifelse(grepl('Constitutive', comp$Name), 'Constitutive',
ifelse(grepl('D', comp$Name), 'D',
ifelse(grepl('M', comp$Name), 'M',
ifelse(grepl('S', comp$Name), 'S', 'C')))))
library_comp$Library <- factor(library_comp$Library, levels = c("C", "D", "M", "S", "Constitutive"))
f <- library_comp %>%
ggplot(aes(x = RNAseq_FC, y = Flow_FC)) + geom_smooth(method=lm, color = 'black', se = TRUE) +
geom_point(aes(color=Library), size = 5) +
scale_color_manual(values = c('#76af51', '#3b9bb3', '#e39225', '#c13a41', 'black')) +
labs(x = 'RNA-seq Fold-change', y = 'Flow Cytometry Fold-change') +
annotate("text", x =3, y = 22, label = paste('r==', pearsonFC),   parse = T, size = 5) +
annotate("text", x =3, y = 19, label = paste('rho==', spearFC),   parse = T, size = 5) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 16),
axis.title.y.left = element_text(size = 16))
a <- library_comp %>%
ggplot(aes(x = RNAseq_Induced, y = Flow_Induced)) + geom_smooth(method=lm, color = 'black', se = TRUE) +
geom_point(aes(color=Library), size = 5) +
scale_color_manual(values = c('#76af51', '#3b9bb3', '#e39225', '#c13a41', 'black')) +
labs(x = 'RNA-seq Induced Expression', y = 'Flow Cytometry Induced Expression') +
annotate("text", x =10, y = 950, label = paste('r==', pearsonI),   parse = T, size = 5) +
annotate("text", x =10, y = 850, label = paste('rho==', spearI),   parse = T, size = 5) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 16),
axis.title.y.left = element_text(size = 16))
b <- library_comp %>%
ggplot(aes(x = RNAseq_Uninduced, y = Flow_Uninduced)) + geom_smooth(method=lm, color = 'black', se = TRUE) +
geom_point(aes(color=Library), size = 5) +
scale_color_manual(values = c('#76af51', '#3b9bb3', '#e39225', '#c13a41', 'black')) +
labs(x = 'RNA-seq Uninduced Expression', y = 'Flow Cytometry Uninduced Expression') +
annotate("text", x =3, y = 640, label = paste('r==', pearsonUI),   parse = T, size = 5) +
annotate("text", x =3, y = 540, label = paste('rho==', spearUI),   parse = T, size = 5) +
theme(axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.x.bottom = element_text(size = 16),
axis.title.y.left = element_text(size = 16))
plot_grid(f,a,b, ncol=3, labels = 'AUTO')
ggsave('../FigureSX/FigureS9.pdf', height = 5, width = 18)
# save data table as input
write.table(library_comp, '../source_data/FigureS9.txt', quote = F, row.names = F, sep = '\t')
# Figure S9: Plate reader supplement with titration profiles of selected promoters
titration <- read.table("../raw_data/titration.txt", header = T, fill = TRUE)
# COMBO
uninduced <- titration %>% filter(Concentration == '1e-04') %>% mutate(background = 514.76*OD + 40.378) %>%
mutate(normalized_GFP = GFP - background) %>%
mutate(GFP.OD = normalized_GFP/OD) %>%
filter(GFP.OD > 0) %>%
group_by(Architecture, Concentration) %>%
mutate(avg_GFP.OD = mean(GFP.OD)) %>%
ungroup() %>%
select(Architecture, avg_GFP.OD) %>% distinct()
UV5_unind <- filter(uninduced, Architecture == 'UV5')$avg_GFP.OD
N_unind <- filter(uninduced, Architecture == 'N')$avg_GFP.OD
C1_unind <- filter(uninduced, Architecture == 'C1')$avg_GFP.OD
C2_unind <- filter(uninduced, Architecture == 'C2')$avg_GFP.OD
tit1 <-titration %>%
filter(Concentration != '1e-04') %>%
filter(Architecture == 'C1' | Architecture == 'C2' | Architecture == 'UV5' | Architecture == 'N') %>%
mutate(background = 514.76*OD + 40.378) %>%
mutate(normalized_GFP = GFP - background) %>%
mutate(GFP.OD = normalized_GFP/OD) %>%
filter(GFP.OD > 0) %>%
group_by(Architecture, Concentration) %>%
mutate(avg_GFP.OD = mean(GFP.OD)) %>%
mutate(FC = ifelse(Architecture == 'C1', avg_GFP.OD/C1_unind,
ifelse(Architecture == 'C2', avg_GFP.OD/C2_unind,
ifelse(Architecture == 'UV5', avg_GFP.OD/UV5_unind, avg_GFP.OD/N_unind)))) %>%
mutate(SEM = sd(log2(FC))/sqrt(n())) %>%
ungroup() %>%
ggplot(aes(x=log10(Concentration), y=log2(FC), colour = Architecture, linetype = Architecture)) +
geom_hline(yintercept=c(0, 2.5, 5), color='grey70', linetype = 'dotted', size = 0.75) +
geom_errorbar(aes(ymin=log2(FC)-SEM, ymax=log2(FC)+SEM), width=.1, linetype = 'solid', color = 'black') +
geom_point(size = 3, alpha = 0.75) +
geom_line() +
scale_linetype_manual(values = c("solid", "solid", "dashed", "solid"), labels= c('Pcombo 1', 'Pcombo 2', 'Constitutive', 'lacUV5')) +
scale_color_manual(values = c("#75af4f", "#bbd7a6", "black", "grey50"), labels= c('Pcombo 1', 'Pcombo 2', 'Constitutive', 'lacUV5')) +
ylim(-1.3, 6.64) +
labs(y = expression('log'[2]~'(Fold-change)'), x = expression('log'[10]~'(mM IPTG)')) +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 16),
legend.text = element_text(size = 15))
# MULTIPLE
M1_unind <- filter(uninduced, Architecture == 'M1')$avg_GFP.OD
M2_unind <- filter(uninduced, Architecture == 'M2')$avg_GFP.OD
tit2 <- titration %>%
filter(Concentration != '1e-04') %>%
filter(Architecture == 'M1' | Architecture == 'M2' | Architecture == 'UV5' | Architecture == 'N') %>%
mutate(background = 514.76*OD + 40.378) %>%
mutate(normalized_GFP = GFP - background) %>%
mutate(GFP.OD = normalized_GFP/OD) %>%
filter(GFP.OD > 0) %>%
group_by(Architecture, Concentration) %>%
mutate(avg_GFP.OD = mean(GFP.OD)) %>%
mutate(FC = ifelse(Architecture == 'M1', avg_GFP.OD/M1_unind,
ifelse(Architecture == 'M2', avg_GFP.OD/M2_unind,
ifelse(Architecture == 'UV5', avg_GFP.OD/UV5_unind, avg_GFP.OD/N_unind)))) %>%
mutate(SEM = sd(log2(FC))/sqrt(n())) %>%
ungroup() %>%
ggplot(aes(x=log10(Concentration), y=log2(FC), colour = Architecture, linetype = Architecture)) +
geom_hline(yintercept=c(0, 2.5, 5), color='grey70', linetype = 'dotted', size = 0.75) +
geom_errorbar(aes(ymin=log2(FC)-SEM, ymax=log2(FC)+SEM), width=.1, linetype = 'solid', color = 'black') +
geom_point(size = 3, alpha = 0.75) + geom_line() +
scale_linetype_manual(values = c("solid", "solid", "dashed", "solid"), labels= c('Pmultiple 1', 'Pmultiple 2', 'Constitutive', 'lacUV5')) +
scale_color_manual(values = c("#e39225", "#ECB469", "black", "grey50"), labels= c('Pmultiple 1', 'Pmultiple 2', 'Constitutive', 'lacUV5')) +
ylim(-1.3, 6.64) +
labs(y = expression('log'[2]~'(Fold-change)'), x = expression('log'[10]~'(mM IPTG)')) +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 16),
legend.text = element_text(size = 15))
# DISTAL
D1_unind <- filter(uninduced, Architecture == 'D1')$avg_GFP.OD
D2_unind <- filter(uninduced, Architecture == 'D2')$avg_GFP.OD
tit3 <- titration %>%
filter(Concentration != '1e-04') %>%
filter(Architecture == 'D1' | Architecture == 'D2' | Architecture == 'UV5' | Architecture == 'N') %>%
mutate(background = 514.76*OD + 40.378) %>%
mutate(normalized_GFP = GFP - background) %>%
mutate(GFP.OD = normalized_GFP/OD) %>%
filter(GFP.OD > 0) %>%
group_by(Architecture, Concentration) %>%
mutate(avg_GFP.OD = mean(GFP.OD)) %>%
mutate(FC = ifelse(Architecture == 'D1', avg_GFP.OD/D1_unind,
ifelse(Architecture == 'D2', avg_GFP.OD/D2_unind,
ifelse(Architecture == 'UV5', avg_GFP.OD/UV5_unind, avg_GFP.OD/N_unind)))) %>%
mutate(SEM = sd(log2(FC))/sqrt(n())) %>%
ungroup() %>%
ggplot(aes(x=log10(Concentration), y=log2(FC), colour = Architecture, linetype = Architecture)) +
geom_hline(yintercept=c(0, 2.5, 5), color='grey70', linetype = 'dotted', size = 0.75) +
geom_errorbar(aes(ymin=log2(FC)-SEM, ymax=log2(FC)+SEM), width=.1, linetype = 'solid', color = 'black') +
geom_point(size = 3, alpha = 0.75) + geom_line() +
scale_linetype_manual(values = c("solid", "solid", "dashed", "solid"), labels= c('Pspacer 1', 'Pspacer 2', 'Constitutive', 'lacUV5')) +
scale_color_manual(values = c("#3b9bb3", "#c2e0e7", "black", "grey50"), labels= c('Pspacer 1', 'Pspacer 2', 'Constitutive', 'lacUV5')) +
ylim(-1.3, 6.64) +
labs(y = expression('log'[2]~'(Fold-change)'), x = expression('log'[10]~'(mM IPTG)')) +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 16),
legend.text = element_text(size = 15))
# STERIC
S1_unind <- filter(uninduced, Architecture == 'S1')$avg_GFP.OD
S2_unind <- filter(uninduced, Architecture == 'S2')$avg_GFP.OD
tit4 <- titration %>%
filter(Concentration != '1e-04') %>%
filter(Architecture == 'S1' | Architecture == 'S2' | Architecture == 'UV5' | Architecture == 'N') %>%
mutate(background = 514.76*OD + 40.378) %>%
mutate(normalized_GFP = GFP - background) %>%
mutate(GFP.OD = normalized_GFP/OD) %>%
filter(GFP.OD > 0) %>%
group_by(Architecture, Concentration) %>%
mutate(avg_GFP.OD = mean(GFP.OD)) %>%
mutate(FC = ifelse(Architecture == 'S1', avg_GFP.OD/S1_unind,
ifelse(Architecture == 'S2', avg_GFP.OD/S2_unind,
ifelse(Architecture == 'UV5', avg_GFP.OD/UV5_unind, avg_GFP.OD/N_unind)))) %>%
mutate(SEM = sd(log2(FC))/sqrt(n())) %>%
ungroup() %>%
ggplot(aes(x=log10(Concentration), y=log2(FC), colour = Architecture, linetype = Architecture)) +
geom_hline(yintercept=c(0, 2.5, 5), color='grey70', linetype = 'dotted', size = 0.75) +
geom_errorbar(aes(ymin=log2(FC)-SEM, ymax=log2(FC)+SEM), width=.1, linetype = 'solid', color = 'black') + geom_point(size = 3, alpha = 0.75) + geom_line() +
scale_linetype_manual(values = c("dashed", "solid", "solid", "solid"), labels= c('Constitutive', 'Psteric 1', 'Psteric 2', 'lacUV5')) +
scale_color_manual(values = c("black", "#c13b41", "#f3bfbb", "grey50"), labels= c('Constitutive', 'Psteric 1', 'Psteric 2', 'lacUV5')) +
ylim(-2.5, 6.64) +
labs(y = expression('log'[2]~'(Fold-change)'), x = expression('log'[10]~'(mM IPTG)')) +
theme(axis.text = element_text(size = 15),
axis.title = element_text(size = 16),
legend.text = element_text(size = 15))
plot_grid(tit1, tit2, tit3, tit4, ncol = 2)
ggsave('../FigureSX/FigureS10.pdf', height = 6, width = 9)
# save data table as input
write.table(titration, '../source_data/FigureS10.txt', quote = F, row.names = F, sep = '\t')
