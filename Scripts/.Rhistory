mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
#STATISTICAL TEST PERFORMED AT END OF other script, barcodeQuant_LacZSpacing.Rmd
mean_proximal <- TF_spacing %>% filter(Proximal == 'proximal' & Background == 'ind', Distal == 'nodistal') %>%
group_by(TF) %>%
mutate(mean_expression_proximal = mean(RNA_exp_12)) %>%
ungroup() %>%
select(TF, mean_expression_proximal) %>% distinct()
#Nullproximal site was generated by scrambling LacI
mean_noproximal <- TF_spacing %>% filter(Proximal == 'nullproximal' & Background == 'ind', Distal == 'nodistal') %>%
group_by(TF) %>%
mutate(mean_expression_noproximal = mean(RNA_exp_12)) %>%
ungroup() %>%
select(TF, mean_expression_noproximal) %>% distinct()
znull <-as.data.frame(cbind(c(as.numeric(1)), c("znull"))) %>% mutate(V1 = as.numeric(V1))
names(znull) <- c('relative_repression', 'TF')
test <- data.frame() %>% mutate(TF='znull', relative_repression = 1)
b <- left_join(mean_proximal, mean_noproximal, by = 'TF') %>%
mutate(relative_repression = mean_expression_proximal/mean_expression_noproximal) %>%
select(TF, relative_repression) %>% rbind(znull) %>%ÃŸ
#STATISTICAL TEST PERFORMED AT END OF other script, barcodeQuant_LacZSpacing.Rmd
mean_proximal <- TF_spacing %>% filter(Proximal == 'proximal' & Background == 'ind', Distal == 'nodistal') %>%
group_by(TF) %>%
mutate(mean_expression_proximal = mean(RNA_exp_12)) %>%
ungroup() %>%
select(TF, mean_expression_proximal) %>% distinct()
#Nullproximal site was generated by scrambling LacI
mean_noproximal <- TF_spacing %>% filter(Proximal == 'nullproximal' & Background == 'ind', Distal == 'nodistal') %>%
group_by(TF) %>%
mutate(mean_expression_noproximal = mean(RNA_exp_12)) %>%
ungroup() %>%
select(TF, mean_expression_noproximal) %>% distinct()
znull <-as.data.frame(cbind(c(as.numeric(1)), c("znull"))) %>% mutate(V1 = as.numeric(V1))
names(znull) <- c('relative_repression', 'TF')
test <- data.frame() %>% mutate(TF='znull', relative_repression = 1)
b <- left_join(mean_proximal, mean_noproximal, by = 'TF') %>%
mutate(relative_repression = mean_expression_proximal/mean_expression_noproximal) %>%
select(TF, relative_repression) %>% rbind(znull) %>%
ggplot(., aes(x= TF, y = relative_repression, fill = TF)) +
geom_bar(stat = 'identity', position = 'dodge', width = .65) +
scale_fill_manual(values = c(pal, 'gray60')) +
scale_x_discrete(expand = c(0,2)) +
geom_hline(yintercept = 1, linetype = 'dashed', color = 'gray') +
labs(x = 'Transcription Factor', y = 'Relative expression', Title = 'Effect of Repressor at Proximal Site') +
theme(axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.title.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.text=element_text(size=20),
legend.position = 'none')
b
#The top part of figure 1d is produced in the barcodeQuant_LacZSpacing.Rmd script
ggsave('../Figure1/Figure1E_bottom.pdf', units = 'in', width = 12, height = 4)
#Here we add a 3bp windown centered around 115.5, a repression optima determined by Johannes Muller et al. 1996
in_phase=data.frame(x1=c(102.5,114,125), x2=c(105.5,117,128), y1=c(.75,.75,.75), y2=c(1.35,1.35,1.35))
TF_spacing %>% filter(., Proximal == 'nullproximal', Distal == 'distal') %>%
left_join(., mean_noproximal, by = 'TF') %>%
mutate(relative_distal = RNA_exp_12/mean_expression_noproximal,
spacing=Offset+94) %>% #interoperator distance calculated by: promoter is 71 bp + 23bp TF site + offset
mutate(spacing = ifelse(TF=='GalR', spacing+1, spacing), #adjust to center of operator binding sites
spacing = ifelse(TF=='PurR', spacing-1.5, spacing), #adjust to center of operator binding sites
spacing = ifelse(TF=='GplR', spacing-3, spacing)) %>% #adjust spacing to center of operator binding site
ggplot(aes(spacing, relative_distal, color = TF)) +
geom_point(alpha = .3) +
geom_line(alpha=.3) +
facet_grid(~TF) +
geom_rect(data=in_phase, aes(x=NULL, y=NULL,xmin=x1, xmax=x2, ymin=y1, ymax=y2, color = NULL), fill='gray60', alpha=0.3) +
geom_smooth(span=.5, se = FALSE, size = 1, alpha = 2.5) +
scale_color_manual(values = pal) +
#geom_vline(xintercept = c(100,110,120), linetype='dotted') +
geom_hline(yintercept=1, linetype = 'dashed', color = 'red') +
scale_x_reverse() +
#ylim(.6,1.25) +
labs(title = 'Expression with only Distal Site', y = 'Relative Expression', x = 'Distance between operators (bp)') +
theme(axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.title.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.text=element_text(size=20),
legend.position = 'none',
strip.text.x = element_text(size = 16),
strip.background = element_blank())
ggsave('../Figure1/Figure1F.pdf', units = 'in', width = 12, height = 4)
TF_spacing %>% filter(., Proximal == 'nullproximal', Distal == 'distal') %>%
left_join(., mean_noproximal, by = 'TF') %>%
mutate(relative_distal = RNA_exp_12/mean_expression_noproximal, spacing=Offset+95) %>% filter(TF == 'AraC') %>% glm(RNA_exp_12 ~ spacing, data = .) %>% aov() %>% summary()
#Normalize by dividing distal by nulldistal
in_phase=data.frame(x1=c(102.5,114,125.5), x2=c(105.5,117,128.5), y1=c(.6,.6,.6), y2=c(1.25,1.25,1.25))
nulldistal_exp <- filter(TF_spacing,Distal == 'nulldistal', Background == 'ind')[c(12,14,6)] %>%
mutate(nulldistal_exp=RNA_exp_12) %>%
select(-RNA_exp_12)
TF_spacing %>% filter(., Proximal == 'proximal', Background == 'ind', Distal == 'distal') %>%
mutate(Phase = Offset/11,
spacing=Offset+94) %>% #interoperator distance calculated by: promoter is 71 bp + 23bp TF site + offset
mutate(spacing = ifelse(TF=='GalR', spacing+1, spacing), #adjust to center of operator binding sites
spacing = ifelse(TF=='PurR', spacing-1.5, spacing), #adjust to center of operator binding sites
spacing = ifelse(TF=='GplR', spacing-3, spacing)) %>% #adjust spacing to center of operator binding site
left_join(nulldistal_exp, by = c('TF' , 'Offset')) %>%
group_by(TF, Offset) %>% mutate(RNA_exp_12_norm = RNA_exp_12/nulldistal_exp) %>%
ggplot(aes(spacing, RNA_exp_12_norm, color = TF)) +
geom_point(alpha = .3) +
geom_line(alpha=.3) +
facet_grid(~TF) +
geom_rect(data=in_phase, aes(x=NULL, y=NULL,xmin=x1, xmax=x2, ymin=y1, ymax=y2, color = NULL), fill='gray60', alpha=0.3) +
geom_smooth(span=.5, se = FALSE, size = 1, alpha = 2.5) +
scale_color_manual(values = pal)+
#  geom_vline(xintercept = c(100,110,120), linetype='dotted') +
geom_hline(yintercept = 1, color = 'red', linetype = 'dashed') +
scale_x_reverse() +
ylim(.6,1.25) + #this excludes two points, glpR at offset25 and lldr @offset13
labs(title = 'Expression Normalized by Null Sequence', y = 'Relative expression', x = 'Distance between operators (bp)') +
theme(axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
axis.title.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.text=element_text(size=20),
legend.position = 'none',
strip.text.x = element_text(size = 16),
strip.background = element_blank())
ggsave('../Figure1/Figure1G.pdf', units = 'in', width = 12, height = 4)
withproximal <- loop_vars %>%
filter(., !grepl("apFAB",name),
Proximal == 'proximal',
Background == 'ind',
Distal == 'distal') %>%
mutate(Phase = Offset/11) %>%
left_join(nulldistal_exp, by = c('TF' , 'Offset')) %>%
group_by(TF, Offset) %>%
mutate(RNA_exp_12_norm = RNA_exp_12/nulldistal_exp) %>%
select(TF, RNA_exp_12_norm) %>% distinct() %>% na.omit() %>%
group_by(TF) %>%
mutate(max_prox_repression = min(RNA_exp_12_norm)) %>%
select(TF, max_prox_repression) %>% distinct()
withoutproximal <- TF_spacing %>% filter(., Proximal == 'nullproximal', Distal == 'distal') %>%
left_join(., mean_noproximal, by = 'TF') %>%
mutate(relative_distal = RNA_exp_12/mean_expression_noproximal, spacing=Offset+95) %>% na.omit() %>%
group_by(TF) %>%
mutate(max_noprox_repression = min(relative_distal)) %>%
select(TF, max_noprox_repression) %>% distinct()
left_join(withproximal, withoutproximal, by = 'TF') %>%
mutate(effect_size = max_noprox_repression/max_prox_repression )
withproximal <- loop_vars %>%
filter(., !grepl("apFAB",name),
Proximal == 'proximal',
Background == 'ind',
Distal == 'distal') %>%
mutate(Phase = Offset/11) %>%
left_join(nulldistal_exp, by = c('TF' , 'Offset')) %>%
group_by(TF, Offset) %>%
mutate(RNA_exp_12_norm = RNA_exp_12/nulldistal_exp) %>%
select(TF, RNA_exp_12_norm, offset=Offset) %>% distinct() %>% na.omit()
withoutproximal <- TF_spacing %>% filter(., Proximal == 'nullproximal', Distal == 'distal') %>%
left_join(., mean_noproximal, by = 'TF') %>%
mutate(relative_distal = RNA_exp_12/mean_expression_noproximal,
spacing=Offset+95) %>%
select(relative_distal, TF, offset=Offset) %>%
na.omit() %>%
distinct()
TFs <- distinct(select(withoutproximal, TF))$TF
for (i in TFs){
transfact <- i
temp <- left_join(withproximal, withoutproximal, by = c('offset'='offset', 'TF'='TF')) %>% filter(TF == transfact)
print(transfact)
pval<- t.test(temp$RNA_exp_12_norm, temp$relative_distal, alternative = "less")$p.value
fc <- mean(temp$relative_distal/temp$RNA_exp_12_norm)
print(paste(signif(fc, 3),'x distal effect with proximal at ', signif(pval,3), ' significance', sep =''))
}
knitr::opts_knit$set(root.dir = getwd())
options(stringsAsFactors = F)
library(tidyverse)
library(Biostrings)
#library(dplyr)
library("wesanderson")
names(wes_palettes)
require(cowplot)
pal <- wes_palette('Zissou1', 6, type = 'continuous')
filelist = list.files(path = '../raw_data/looping_architectures/', pattern = 'fLP3_loop*')
for(i in filelist) {
x <- read.table(paste('../raw_data/looping_architectures/',i, sep = ''), col.names=c(i, 'barcode'), header = F)
x[[i]] <- 1000000*x[[i]]/sum(x[[i]])  #Normalizes by RPM
assign(i,x)
}
fLP3_loop <- full_join(fLP3_loop_DNA1.txt, fLP3_loop_DNA2.txt, by='barcode') %>% #Change .txt files to files you've read in
full_join(., fLP3_loop_RNA1.txt, by='barcode') %>%
full_join(., fLP3_loop_RNA2.txt, by='barcode') %>%
full_join(., fLP3_loop_RNA1_IPTG.txt, by='barcode') %>%
full_join(., fLP3_loop_RNA2_IPTG.txt, by='barcode')
names(fLP3_loop) = sub(".txt","", names(fLP3_loop)) #rename all colummns that were named after text file temp <- Loop_Data[c(-1,-5)]
rm(list = c(filelist))
rm(x)
#Get expression of variants from barcode data
barcode_stats_loop <- read.table("../raw_data/looping_architectures/lacZ_controls_bc_map.txt", header = T)
mapped_barcodes <- barcode_stats_loop[!is.na(barcode_stats_loop$name),]
Compare_barcode_Reps <- left_join(mapped_barcodes, fLP3_loop , by ='barcode')
Compare_barcode_Reps[is.na(Compare_barcode_Reps)] <- 0
#how many barcodes you have at end
nrow(filter(Compare_barcode_Reps, fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0))  ##### Barcodes integrated of 2,011,019, 65% integrated
temp <- filter(Compare_barcode_Reps, fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0)#, min_DNA_2 > 0
pos_loop <- temp %>% group_by(name) %>%
mutate(num_barcodes = n()) %>%
filter(num_barcodes >= 3) %>%
mutate(bcRD = (fLP3_loop_RNA1+fLP3_loop_RNA2)/(fLP3_loop_DNA1+fLP3_loop_DNA2),
bc_cv = sd(bcRD)/mean(bcRD)) %>%
mutate(RNA_exp_1 = sum(fLP3_loop_RNA1)/(sum(fLP3_loop_DNA1)),
RNA_exp_2 = sum(fLP3_loop_RNA2)/(sum(fLP3_loop_DNA2)),
RNA_exp_1_IPTG = sum(fLP3_loop_RNA1_IPTG)/(sum(fLP3_loop_DNA1)),
RNA_exp_2_IPTG = sum(fLP3_loop_RNA2_IPTG)/(sum(fLP3_loop_DNA2)),
DNA_sum = (sum(fLP3_loop_DNA2)+sum(fLP3_loop_DNA1)),
RNA_exp_12 = (RNA_exp_1+RNA_exp_2)/2,
RNA_exp_12_IPTG = (RNA_exp_1_IPTG+RNA_exp_2_IPTG)/2) %>%
ungroup() %>%
select(name, RNA_exp_1, RNA_exp_2, RNA_exp_1_IPTG, RNA_exp_2_IPTG,RNA_exp_12, RNA_exp_12_IPTG, DNA_sum, num_barcodes, bc_cv) %>%
distinct()
pos_loop <- read.table("../raw_data/looping_architectures/synthetic_promoter_pos_controls_formatted.txt", col.names = c('name', 'variant')) %>% left_join(pos_loop,., by = 'name')
#Get expression of variants from barcode data
barcode_stats_loop <- read.table("../raw_data/looping_architectures/lacZ_bc_map.txt", header = T, sep = ',', col.names = c('barcode','variant', 'num_reads'))
mapped_barcodes <- barcode_stats_loop[!is.na(barcode_stats_loop$variant),]
Compare_barcode_Reps <- left_join(mapped_barcodes, fLP3_loop , by ='barcode')
Compare_barcode_Reps[is.na(Compare_barcode_Reps)] <- 0
#how many barcodes you have at end
nrow(filter(Compare_barcode_Reps, fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0))  ##### Barcodes integrated of 2,011,019, 65% integrated
temp <- filter(Compare_barcode_Reps, fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0)#, min_DNA_2 > 0
loop_MOPS <- temp %>% group_by(variant) %>%
mutate(num_barcodes = n()) %>%
filter(num_barcodes >= 3) %>%
mutate(bcRD = (fLP3_loop_RNA1+fLP3_loop_RNA2)/(fLP3_loop_DNA1+fLP3_loop_DNA2),
bc_cv = sd(bcRD)/mean(bcRD)) %>%
mutate(RNA_exp_1 = sum(fLP3_loop_RNA1)/(sum(fLP3_loop_DNA1)),
RNA_exp_2 = sum(fLP3_loop_RNA2)/(sum(fLP3_loop_DNA2)),
RNA_exp_1_IPTG = sum(fLP3_loop_RNA1_IPTG)/(sum(fLP3_loop_DNA1)),
RNA_exp_2_IPTG = sum(fLP3_loop_RNA2_IPTG)/(sum(fLP3_loop_DNA2)),
DNA_sum = (sum(fLP3_loop_DNA2)+sum(fLP3_loop_DNA1)),
RNA_exp_12 = (RNA_exp_1+RNA_exp_2)/2,
RNA_exp_12_IPTG = (RNA_exp_1_IPTG+RNA_exp_2_IPTG)/2) %>%
ungroup() %>%
select(variant, RNA_exp_1, RNA_exp_2, RNA_exp_1_IPTG, RNA_exp_2_IPTG,RNA_exp_12, RNA_exp_12_IPTG, DNA_sum, num_barcodes, bc_cv) %>%
distinct()
# read in reference so we can label mapping file
ref <- read.table('../raw_data/looping_architectures/looping_lib_v2_controls_clean.txt', col.names= c('name', 'sequence')) %>% mutate(name = as.character(name), sequence = as.character(sequence))
# add reverse complement for each sequence so we can properly label everything
ref_with_rc <- ref %>%
mutate(name = paste0(name, '_rc'),
sequence = as.character(reverseComplement(DNAStringSet(sequence)))) %>%
select(name, sequence) %>%
bind_rows(select(ref, name, sequence)) %>%
# trim primers so sequence is 150 to match sequence in barcode map
mutate(variant = toupper(substr(sequence, 25, 174)))
# add variant name from reference
exp_out <- loop_MOPS %>%
left_join(select(ref_with_rc, -sequence), by = 'variant') %>% na.omit() %>% mutate(name=gsub('>', '', .$name)) %>% rbind(.,pos_loop)
#write out data frame
write.table(exp_out, "../processed_data/fLP3.loop_MOPS_glu_expression.txt", quote = F, row.names = F)
loop_MOPS <- read.table("../processed_data/fLP3.loop_MOPS_glu_expression.txt", header = T)
#write.csv(loop_MOPS, "../data/FLP3_loop_MOPS_glu_expression.csv", row.names=F)
loop_MOPS$name <- gsub("offset", "", loop_MOPS$name)
loop_MOPS$name <- gsub("_cap", "", loop_MOPS$name)
loop_MOPS$name <- gsub("lac_bg", "lac", loop_MOPS$name)
loop_vars <- loop_MOPS %>% separate(col = 'name',
into = c("TF", "Distal", "Offset", "Background", 'Proximal') ,
sep = "_", remove = F)
loop_vars <- loop_vars[!is.na(loop_vars$Proximal),]
loop_vars$Offset <- as.numeric(loop_vars$Offset)
TF_spacing <- filter(loop_vars, Background == 'ind')
mean_proximal <- TF_spacing %>% filter(Proximal == 'proximal' & Background == 'ind', Distal == 'nodistal') %>%
mutate(type = "proximal") %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
mean_noproximal <- TF_spacing %>% filter(Proximal == 'nullproximal' & Background == 'ind', Distal == 'nodistal') %>%
mutate(type = "no_proximal") %>%
#mutate(type = "no_proximal", TF= 'znull') %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
#So which proximal sites significantly reduce expression?
#AraC significance
t.test(filter(mean_proximal, TF=='AraC')$RNA_exp_12, filter(mean_noproximal, TF=='AraC')$RNA_exp_12)
#t = -1.8712, df = 38.074, p-value = 0.06902
#GalR significance
t.test(filter(mean_proximal, TF=='GalR')$RNA_exp_12, filter(mean_noproximal, TF=='GalR')$RNA_exp_12)
#t = -8.8765, df = 123.35, p-value = 6.675e-15
#glpR significance
t.test(filter(mean_proximal, TF=='GlpR')$RNA_exp_12, filter(mean_noproximal, TF=='GlpR')$RNA_exp_12)
#t = 0.55018, df = 81.305, p-value = 0.5837
#LacI significance
t.test(filter(mean_proximal, TF=='LacI')$RNA_exp_12, filter(mean_noproximal, TF=='LacI')$RNA_exp_12)
#t = -6.2226, df = 40.349, p-value = 2.221e-07
#LldR significance
t.test(filter(mean_proximal, TF=='LldR')$RNA_exp_12, filter(mean_noproximal, TF=='LldR')$RNA_exp_12)
#t = -0.72306, df = 111.74, p-value = 0.4712
#PurR significance
t.test(filter(mean_proximal, TF=='PurR')$RNA_exp_12, filter(mean_noproximal, TF=='PurR')$RNA_exp_12)
#t = -8.2582, df = 247.26, p-value = 8.973e-15
mean_noproximal <- TF_spacing %>% filter(Proximal == 'nullproximal' & Background == 'ind', Distal == 'nodistal') %>%
#mutate(type = "no_proximal") %>%
mutate(type = "no_proximal", TF= 'znull') %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
rbind(mean_proximal, mean_noproximal) %>% write.table(., "../figure1/Figure1e_top.txt", row.names = F, sep = '\t', quote = FALSE)
temp <- rbind(mean_proximal, mean_noproximal)
a <- temp %>%
ggplot(aes(TF, RNA_exp_12, fill = TF)) +
stat_boxplot(geom='errorbar', width=.2) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(data = filter(temp, TF != 'znull'), alpha = .2) +
ylim(0,4) +
annotate('text', x = 'GalR', y = 2, label = "***", size = 8) +
annotate('text', x = 'LacI', y = 1.3, label = "***", size = 8) +
annotate('text', x = 'PurR', y = 2.4, label = "***", size = 8) +
scale_fill_manual(values = c(pal, 'gray60')) +
# labs(x = 'Transcription Factor', y = 'Expression', title = "Repression due to proximal site") +
labs(x = '', y = 'Barcode expression\n(RNA/DNA)', title = "Repression due to proximal site") +
scale_x_discrete(expand = c(0,2)) +
theme(axis.text.x = element_text(size = 0, angle = 45, hjust = 1),
axis.title.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.text=element_text(size=20),
legend.position = 'none')
a
plot_grid(a,b, nrow = 2)  #Part b is produced in Figure_1 script, see d
#AraC significance
t.test(filter(mean_proximal, TF=='AraC')$RNA_exp_12, filter(mean_noproximal, TF=='AraC')$RNA_exp_12)
#GalR significance
t.test(filter(mean_proximal, TF=='GalR')$RNA_exp_12, filter(mean_noproximal, TF=='GalR')$RNA_exp_12)
mean_proximal <- TF_spacing %>% filter(Proximal == 'proximal' & Background == 'ind', Distal == 'nodistal') %>%
mutate(type = "proximal") %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
mean_proximal <- TF_spacing %>% filter(Proximal == 'proximal' & Background == 'ind', Distal == 'nodistal') %>%
mutate(type = "proximal") %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
mean_noproximal <- TF_spacing %>% filter(Proximal == 'nullproximal' & Background == 'ind', Distal == 'nodistal') %>%
mutate(type = "no_proximal") %>%
#mutate(type = "no_proximal", TF= 'znull') %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
#AraC significance
t.test(filter(mean_proximal, TF=='AraC')$RNA_exp_12, filter(mean_noproximal, TF=='AraC')$RNA_exp_12)
#GalR significance
t.test(filter(mean_proximal, TF=='GalR')$RNA_exp_12, filter(mean_noproximal, TF=='GalR')$RNA_exp_12)
#glpR significance
t.test(filter(mean_proximal, TF=='GlpR')$RNA_exp_12, filter(mean_noproximal, TF=='GlpR')$RNA_exp_12)
#LacI significance
t.test(filter(mean_proximal, TF=='LacI')$RNA_exp_12, filter(mean_noproximal, TF=='LacI')$RNA_exp_12)
loop_MOPS$name <- gsub("offset", "", loop_MOPS$name)
loop_MOPS$name <- gsub("_cap", "", loop_MOPS$name)
loop_MOPS$name <- gsub("lac_bg", "lac", loop_MOPS$name)
loop_vars <- loop_MOPS %>% separate(col = 'name',
into = c("TF", "Distal", "Offset", "Background", 'Proximal') ,
sep = "_", remove = F)
loop_vars <- loop_vars[!is.na(loop_vars$Proximal),]
loop_vars$Offset <- as.numeric(loop_vars$Offset)
TF_spacing <- filter(loop_vars, Background == 'ind')
mean_proximal <- TF_spacing %>% filter(Proximal == 'proximal' & Background == 'ind', Distal == 'nodistal') %>%
mutate(type = "proximal") %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
mean_noproximal <- TF_spacing %>% filter(Proximal == 'nullproximal' & Background == 'ind', Distal == 'nodistal') %>%
mutate(type = "no_proximal") %>%
#mutate(type = "no_proximal", TF= 'znull') %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
#So which proximal sites significantly reduce expression?
#AraC significance
t.test(filter(mean_proximal, TF=='AraC')$RNA_exp_12, filter(mean_noproximal, TF=='AraC')$RNA_exp_12)
#t = -1.8712, df = 38.074, p-value = 0.06902
#GalR significance
t.test(filter(mean_proximal, TF=='GalR')$RNA_exp_12, filter(mean_noproximal, TF=='GalR')$RNA_exp_12)
#t = -8.8765, df = 123.35, p-value = 6.675e-15
#glpR significance
t.test(filter(mean_proximal, TF=='GlpR')$RNA_exp_12, filter(mean_noproximal, TF=='GlpR')$RNA_exp_12)
#t = 0.55018, df = 81.305, p-value = 0.5837
#LacI significance
t.test(filter(mean_proximal, TF=='LacI')$RNA_exp_12, filter(mean_noproximal, TF=='LacI')$RNA_exp_12)
#t = -6.2226, df = 40.349, p-value = 2.221e-07
#LldR significance
t.test(filter(mean_proximal, TF=='LldR')$RNA_exp_12, filter(mean_noproximal, TF=='LldR')$RNA_exp_12)
#t = -0.72306, df = 111.74, p-value = 0.4712
#PurR significance
t.test(filter(mean_proximal, TF=='PurR')$RNA_exp_12, filter(mean_noproximal, TF=='PurR')$RNA_exp_12)
#t = -8.2582, df = 247.26, p-value = 8.973e-15
mean_noproximal <- TF_spacing %>% filter(Proximal == 'nullproximal' & Background == 'ind', Distal == 'nodistal') %>%
#mutate(type = "no_proximal") %>%
mutate(type = "no_proximal", TF= 'znull') %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
rbind(mean_proximal, mean_noproximal) %>% write.table(., "../source_data/Figure1E_top.txt", row.names = F, sep = '\t', quote = FALSE)
temp <- rbind(mean_proximal, mean_noproximal)
a <- temp %>%
ggplot(aes(TF, RNA_exp_12, fill = TF)) +
stat_boxplot(geom='errorbar', width=.2) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(data = filter(temp, TF != 'znull'), alpha = .2) +
ylim(0,4) +
annotate('text', x = 'GalR', y = 2, label = "***", size = 8) +
annotate('text', x = 'LacI', y = 1.3, label = "***", size = 8) +
annotate('text', x = 'PurR', y = 2.4, label = "***", size = 8) +
scale_fill_manual(values = c(pal, 'gray60')) +
# labs(x = 'Transcription Factor', y = 'Expression', title = "Repression due to proximal site") +
labs(x = '', y = 'Barcode expression\n(RNA/DNA)', title = "Repression due to proximal site") +
scale_x_discrete(expand = c(0,2)) +
theme(axis.text.x = element_text(size = 0, angle = 45, hjust = 1),
axis.title.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.text=element_text(size=20),
legend.position = 'none')
a
plot_grid(a,b, nrow = 2)  #Part b is produced in Figure_1 script, see E
loop_MOPS$name <- gsub("offset", "", loop_MOPS$name)
loop_MOPS$name <- gsub("_cap", "", loop_MOPS$name)
loop_MOPS$name <- gsub("lac_bg", "lac", loop_MOPS$name)
loop_vars <- loop_MOPS %>% separate(col = 'name',
into = c("TF", "Distal", "Offset", "Background", 'Proximal') ,
sep = "_", remove = F)
loop_vars <- loop_vars[!is.na(loop_vars$Proximal),]
loop_vars$Offset <- as.numeric(loop_vars$Offset)
TF_spacing <- filter(loop_vars, Background == 'ind')
mean_proximal <- TF_spacing %>% filter(Proximal == 'proximal' & Background == 'ind', Distal == 'nodistal') %>%
mutate(type = "proximal") %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
mean_noproximal <- TF_spacing %>% filter(Proximal == 'nullproximal' & Background == 'ind', Distal == 'nodistal') %>%
mutate(type = "no_proximal") %>%
#mutate(type = "no_proximal", TF= 'znull') %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
#So which proximal sites significantly reduce expression?
#AraC significance
t.test(filter(mean_proximal, TF=='AraC')$RNA_exp_12, filter(mean_noproximal, TF=='AraC')$RNA_exp_12)
#t = -1.8712, df = 38.074, p-value = 0.06902
#GalR significance
t.test(filter(mean_proximal, TF=='GalR')$RNA_exp_12, filter(mean_noproximal, TF=='GalR')$RNA_exp_12)
#t = -8.8765, df = 123.35, p-value = 6.675e-15
#glpR significance
t.test(filter(mean_proximal, TF=='GlpR')$RNA_exp_12, filter(mean_noproximal, TF=='GlpR')$RNA_exp_12)
#t = 0.55018, df = 81.305, p-value = 0.5837
#LacI significance
t.test(filter(mean_proximal, TF=='LacI')$RNA_exp_12, filter(mean_noproximal, TF=='LacI')$RNA_exp_12)
#t = -6.2226, df = 40.349, p-value = 2.221e-07
#LldR significance
t.test(filter(mean_proximal, TF=='LldR')$RNA_exp_12, filter(mean_noproximal, TF=='LldR')$RNA_exp_12)
#t = -0.72306, df = 111.74, p-value = 0.4712
#PurR significance
t.test(filter(mean_proximal, TF=='PurR')$RNA_exp_12, filter(mean_noproximal, TF=='PurR')$RNA_exp_12)
#t = -8.2582, df = 247.26, p-value = 8.973e-15
mean_noproximal <- TF_spacing %>% filter(Proximal == 'nullproximal' & Background == 'ind', Distal == 'nodistal') %>%
#mutate(type = "no_proximal") %>%
mutate(type = "no_proximal", TF= 'znull') %>%
select(variant, type, TF) %>% left_join(., Compare_barcode_Reps, by = 'variant') %>%
filter(fLP3_loop_DNA1 > 0 | fLP3_loop_DNA2 > 0) %>%
mutate(RNA_exp_1 = fLP3_loop_RNA1/fLP3_loop_DNA1,
RNA_exp_2 = fLP3_loop_RNA2/fLP3_loop_DNA2,
RNA_exp_12 = RNA_exp_1+RNA_exp_2/2) %>% filter(RNA_exp_12 < Inf) %>% na.omit()
rbind(mean_proximal, mean_noproximal) %>% write.table(., "../source_data/Figure1E_top.txt", row.names = F, sep = '\t', quote = FALSE)
temp <- rbind(mean_proximal, mean_noproximal)
a <- temp %>%
ggplot(aes(TF, RNA_exp_12, fill = TF)) +
stat_boxplot(geom='errorbar', width=.2) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(data = filter(temp, TF != 'znull'), alpha = .2) +
ylim(0,4) +
annotate('text', x = 'GalR', y = 2, label = "***", size = 8) +
annotate('text', x = 'LacI', y = 1.3, label = "***", size = 8) +
annotate('text', x = 'PurR', y = 2.4, label = "***", size = 8) +
scale_fill_manual(values = c(pal, 'gray60')) +
# labs(x = 'Transcription Factor', y = 'Expression', title = "Repression due to proximal site") +
labs(x = '', y = 'Barcode expression\n(RNA/DNA)', title = "Repression due to proximal site") +
scale_x_discrete(expand = c(0,2)) +
theme(axis.text.x = element_text(size = 0, angle = 45, hjust = 1),
axis.title.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
axis.title.y = element_text(size = 20),
legend.text=element_text(size=20),
legend.position = 'none')
a
ggsave('../Figure1/Figure1E_top.pdf', units = 'in', width = 7, height = 6)
ggsave('../Figure1/Figure1E_top.pdf', units = 'in', width = 7, height = 3)
